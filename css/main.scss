@import url('./reset.css');

$url:"https://raw.githubusercontent.com/ParkYoungWoong/overwatch-hero-selector-vanilla/master/images";
/* body */
body{
  /*block 요소의 width 값은 auto 로 늘어날 수 있을만큼 최대한 늘어나려고 함.*/
  height:100vh; /* 브라우저 화면 크기만큼의 높이. */
  background-image: url('#{$url}/bg.jpg'); //scss
  background-size: cover; /* 가로, 세로 중 더 넓은 쪽의 사이즈에 맞춤.  */
  background-repeat: no-repeat;
  background-attachment: fixed; /* 스크롤 하더라도 배경은 움직이지 않게 */
}

/* container */
.container{
  padding:50px 0px;
  
 

  .heroes{
  display:flex;
  flex-wrap:wrap; /* 줄바꿈을 위해 wrap */
  justify-content:center;
  max-width:700px; /* max-width 지정하면 화면 작아져도 안짤리고 수직으로 정렬됨 (반응형)  */
  margin:auto; /* 위 아래값이 지정되어 있을때 auto를 쓰면 가운데 정렬 */
  padding:40px 20px;

      .hero{
      width:80px;
      height:84px;
      margin :4px;
      border:3px solid #fff;
      border-radius:10px;
      box-sizing:border-box;/* border 가 들어간 만큼 전체 요소를 커지게 하지 않기 위해 사용 */
      background-color: #555;
      transform: skewX(-14deg);
      transition: transform .3s,  /* transition 에 요소 속성 지정 해줌으로써 배경색은 바로 바뀌고 transform으로 작업한 크기 변화만 애니메이션 적용됨.  */
                background-color .5s ;  
      overflow: hidden;
      
      &:hover{
  background-color: #ff9c00;
  transform: scale(1.3) skew(-14deg);
  z-index:1;
      }

      & .image{
          width:140%;
          height: 100%;
          background-position: center;
          background-size: 90px;
          background-repeat: no-repeat;
          transform:skewX(14deg) translateX(-16px) /* 상위 요소에 적용한 skewX(-14deg) 때문에 안에있는 image도 찌그러져 보이므로 다시 복구하기 위해 사용 */
          }

          @for $i from 1 through 32 {
            //.hero
            &:nth-child(#{$i}) .image{
              background-image: url('#{$url}/hero#{$i}.png');
            }
          }

    }
  }
   & .logo{

max-width:300px;
margin:0 auto;
padding:0 20px;
    & img{
      width:100%;
    }
}
} 

